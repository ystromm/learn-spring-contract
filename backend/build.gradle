buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${findProperty('verifierVersion') ?: verifierVersion}"
        // tag::test_dep_in_plugin[]
        // classpath "com.example:beer-common:0.0.1-SNAPSHOT"
        // end::test_dep_in_plugin[]
    }
}

group = 'com.github.ystromm.learn_spring_contract'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'spring-cloud-contract'
apply plugin: 'maven-publish'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$BOM_VERSION"
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile 'com.google.guava:guava:21.0'
    compileOnly "org.projectlombok:lombok:1.16.16"
    testCompile("org.springframework.cloud:spring-cloud-starter-contract-verifier")
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    // tag::test_dep[]
    // testCompile("com.example:beer-common:0.0.1-SNAPSHOT")
    // end::test_dep[]
}

contracts {
    packageWithBaseClasses = 'com.github.ystromm.learn_spring_contract.backend.contracts'
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
